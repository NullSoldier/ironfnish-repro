"use strict";
/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/. */
Object.defineProperty(exports, "__esModule", { value: true });
exports.LanguageUtils = void 0;
const LANGUAGES = {
    English: 0 /* English */,
    ChineseSimplified: 1 /* ChineseSimplified */,
    ChineseTraditional: 2 /* ChineseTraditional */,
    French: 3 /* French */,
    Italian: 4 /* Italian */,
    Japanese: 5 /* Japanese */,
    Korean: 6 /* Korean */,
    Spanish: 7 /* Spanish */,
};
const LANGUAGE_KEYS = Object.keys(LANGUAGES);
const LANGUAGE_VALUES = Object.values(LANGUAGES);
const LANGUAGE_CODES = {
    en: 0 /* English */,
    fr: 3 /* French */,
    it: 4 /* Italian */,
    ja: 5 /* Japanese */,
    ko: 6 /* Korean */,
    es: 7 /* Spanish */,
};
const CHINESE_TRADITIONAL_CODES = ['zh-cht', 'zh-hant', 'zh-hk', 'zh-mo', 'zh-tw'];
const CHINESE_SIMPLIFIED_CODES = ['zh', 'zh-chs', 'zh-hans', 'zh-cn', 'zh-sg'];
function inferLanguageCode() {
    const languageCode = Intl.DateTimeFormat().resolvedOptions().locale;
    if (languageCode.toLowerCase() in CHINESE_SIMPLIFIED_CODES) {
        return 1 /* ChineseSimplified */;
    }
    if (languageCode.toLowerCase() in CHINESE_TRADITIONAL_CODES) {
        return 2 /* ChineseTraditional */;
    }
    const simpleCode = languageCode?.split('-')[0].toLowerCase();
    if (simpleCode && simpleCode in LANGUAGE_CODES) {
        return LANGUAGE_CODES[simpleCode];
    }
    return null;
}
function languageCodeToKey(code) {
    const key = Object.entries(LANGUAGES).find(([_, value]) => value === code)?.[0];
    if (key) {
        return key;
    }
    throw new Error(`No language key found for language code: ${code}`);
}
exports.LanguageUtils = {
    LANGUAGES,
    LANGUAGE_CODES,
    LANGUAGE_KEYS,
    LANGUAGE_VALUES,
    CHINESE_TRADITIONAL_CODES,
    CHINESE_SIMPLIFIED_CODES,
    inferLanguageCode,
    languageCodeToKey,
};
//# sourceMappingURL=language.js.map