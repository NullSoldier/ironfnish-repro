"use strict";
/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/. */
Object.defineProperty(exports, "__esModule", { value: true });
exports.Retry = void 0;
class Retry {
    constructor(strategy) {
        this.strategy = strategy;
        this.attempt = 0;
    }
    try(fn) {
        return new Promise((resolve, reject) => {
            this.tryExecutor(fn, resolve, reject);
        });
    }
    tryExecutor(fn, resolve, reject) {
        fn()
            .then((result) => {
            this.reset();
            resolve(result);
        })
            .catch((error) => {
            if (this.shouldRetry()) {
                setTimeout(() => {
                    this.tryExecutor(fn, resolve, reject);
                }, this.nextDelay());
            }
            else {
                reject(error);
            }
        });
    }
    reset() {
        this.attempt = 0;
    }
    shouldRetry() {
        return this.strategy.maxRetries === undefined || this.attempt < this.strategy.maxRetries;
    }
    nextDelay() {
        // exponential backoff
        const delay = this.strategy.delay * (2 ** this.attempt + this.strategy.jitter * Math.random());
        this.attempt += 1;
        return Math.min(delay, this.strategy.maxDelay);
    }
}
exports.Retry = Retry;
//# sourceMappingURL=retry.js.map