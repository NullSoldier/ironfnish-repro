"use strict";
/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/. */
Object.defineProperty(exports, "__esModule", { value: true });
exports.NumberEnumUtils = exports.StrEnumUtils = void 0;
const lodash_1 = require("lodash");
class StrEnumUtils {
    static getValues(enumType) {
        return Object.values(enumType)
            .filter((v) => typeof v === 'string')
            .map((v) => v);
    }
    static isInEnum(value, enumType) {
        for (const enumValue of StrEnumUtils.getValues(enumType)) {
            if (enumValue === value) {
                return true;
            }
        }
        return false;
    }
}
exports.StrEnumUtils = StrEnumUtils;
class NumberEnumUtils {
    /* Return all the possible values of a number enum e.g
     * enum E1 = { A, B, C} getNumValues(E1) --> [0, 1, 2]
     * enum E2 = { A = 1, B = 2, C = 3} getNumValues(E2) --> [1, 2, 3]
     */
    static getNumValues(enumType) {
        return Object.values(enumType).filter(lodash_1.isNumber);
    }
}
exports.NumberEnumUtils = NumberEnumUtils;
//# sourceMappingURL=enums.js.map