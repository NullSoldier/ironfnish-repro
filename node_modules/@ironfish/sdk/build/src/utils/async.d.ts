export declare class AsyncUtils {
    static materialize<T>(iter: AsyncIterable<T>): Promise<Array<T>>;
    static transform<TIn, TOut>(iter: AsyncIterable<TIn>, transformer: (value: TIn) => TOut): AsyncGenerator<TOut, void, void>;
    static count<T>(iter: AsyncIterable<T>): Promise<number>;
    static first<T>(iter: AsyncIterable<T>): Promise<T>;
    static find<T>(iter: Iterable<T> | AsyncIterable<T>, predicate: ((item: T) => boolean) | ((item: T) => Promise<boolean>)): Promise<T | undefined>;
    static filter<T>(array: Array<T>, predicate: (item: T) => Promise<boolean>): Promise<Array<T>>;
}
//# sourceMappingURL=async.d.ts.map