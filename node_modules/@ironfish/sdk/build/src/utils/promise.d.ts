export declare type PromiseResolve<T> = (value: T) => void;
export declare type PromiseReject = (error?: unknown) => void;
/**
 * This creates a promise and splits it out into the promise,
 * the resolve and reject functions. Useful when you are
 * creating pending promises resolved by some later code.
 */
export declare class PromiseUtils {
    static split<T>(): [Promise<T>, PromiseResolve<T>, PromiseReject];
    static sleep(timeMs: number): Promise<void>;
}
//# sourceMappingURL=promise.d.ts.map