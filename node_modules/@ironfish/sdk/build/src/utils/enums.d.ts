export declare type StrEnumValue<T> = T[keyof T];
export declare type StrEnum<T> = Record<keyof T, string>;
export declare class StrEnumUtils {
    static getValues<T extends StrEnum<T>>(enumType: T): Array<StrEnumValue<T>>;
    static isInEnum<T extends StrEnum<T>>(value: unknown, enumType: T): value is StrEnumValue<T>;
}
export declare type NumEnum<T> = Record<keyof T, string | number>;
export declare class NumberEnumUtils {
    static getNumValues<T extends NumEnum<T>>(enumType: T): Array<number>;
}
//# sourceMappingURL=enums.d.ts.map