"use strict";
/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/. */
Object.defineProperty(exports, "__esModule", { value: true });
exports.AsyncUtils = void 0;
class AsyncUtils {
    static async materialize(iter) {
        const results = [];
        for await (const result of iter) {
            results.push(result);
        }
        return results;
    }
    static async *transform(iter, transformer) {
        for await (const result of iter) {
            yield transformer(result);
        }
    }
    static async count(iter) {
        let count = 0;
        for await (const _result of iter) {
            ++count;
        }
        return count;
    }
    static async first(iter) {
        for await (const result of iter) {
            return result;
        }
        throw new Error('No element found when expecting first in iter');
    }
    static async find(iter, predicate) {
        for await (const item of iter) {
            if (await predicate(item)) {
                return item;
            }
        }
        return undefined;
    }
    static async filter(array, predicate) {
        const include = await Promise.all(array.map(predicate));
        return array.filter((_, index) => include[index]);
    }
}
exports.AsyncUtils = AsyncUtils;
//# sourceMappingURL=async.js.map