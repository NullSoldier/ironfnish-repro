import { MemPool } from '../memPool';
import { TransactionOrHash } from '../network/peerNetwork';
import { Transaction } from '../primitives';
import { CompactBlock } from '../primitives/block';
declare function assembleTransactionsFromMempool(memPool: MemPool, block: CompactBlock): {
    ok: true;
    partialTransactions: TransactionOrHash[];
    missingTransactions: number[];
} | {
    ok: false;
};
declare function assembleBlockFromResponse(partialTransactions: TransactionOrHash[], responseTransactions: readonly Transaction[]): {
    ok: false;
} | {
    ok: true;
    transactions: Transaction[];
};
export declare const CompactBlockUtils: {
    assembleBlockFromResponse: typeof assembleBlockFromResponse;
    assembleTransactionsFromMempool: typeof assembleTransactionsFromMempool;
};
export {};
//# sourceMappingURL=compactblock.d.ts.map