/// <reference types="node" />
import { BlockHash } from '../primitives/blockheader';
import { TransactionHash } from '../primitives/transaction';
import { DatabaseSchema } from '../storage';
import { AssetValue } from './database/assetValue';
import { HeaderValue } from './database/headers';
import { SequenceToHashesValue } from './database/sequenceToHashes';
import { TransactionsValue } from './database/transactions';
export interface MetaSchema extends DatabaseSchema {
    key: 'head' | 'latest';
    value: BlockHash;
}
export interface HeadersSchema extends DatabaseSchema {
    key: BlockHash;
    value: HeaderValue;
}
export interface TransactionsSchema extends DatabaseSchema {
    key: BlockHash;
    value: TransactionsValue;
}
export interface SequenceToHashesSchema extends DatabaseSchema {
    key: number;
    value: SequenceToHashesValue;
}
export interface SequenceToHashSchema extends DatabaseSchema {
    key: number;
    value: BlockHash;
}
export interface HashToNextSchema extends DatabaseSchema {
    key: BlockHash;
    value: BlockHash;
}
export interface AssetSchema extends DatabaseSchema {
    key: Buffer;
    value: AssetValue;
}
export interface TransactionHashToBlockHashSchema extends DatabaseSchema {
    key: TransactionHash;
    value: BlockHash;
}
//# sourceMappingURL=schema.d.ts.map