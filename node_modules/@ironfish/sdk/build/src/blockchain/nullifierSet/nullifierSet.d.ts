import { Block } from '../../primitives';
import { Nullifier } from '../../primitives/nullifier';
import { TransactionHash } from '../../primitives/transaction';
import { IDatabase, IDatabaseTransaction } from '../../storage';
export declare class NullifierSet {
    readonly db: IDatabase;
    private readonly counter;
    private readonly nullifiers;
    constructor(options: {
        db: IDatabase;
        name: string;
    });
    size(tx?: IDatabaseTransaction): Promise<number>;
    contains(nullifier: Nullifier, tx?: IDatabaseTransaction): Promise<boolean>;
    get(nullifier: Nullifier, tx?: IDatabaseTransaction): Promise<TransactionHash | undefined>;
    connectBlock(block: Block, tx?: IDatabaseTransaction): Promise<void>;
    disconnectBlock(block: Block, tx?: IDatabaseTransaction): Promise<void>;
    clear(tx?: IDatabaseTransaction): Promise<void>;
}
//# sourceMappingURL=nullifierSet.d.ts.map