/// <reference types="node" />
import type { IDatabaseEncoding } from '../../storage/database/types';
import { BufferMap } from 'buffer-map';
import { Transaction } from '../../primitives';
export interface TransactionValue {
    transaction: Transaction;
    timestamp: Date;
    blockHash: Buffer | null;
    sequence: number | null;
    submittedSequence: number;
    assetBalanceDeltas: BufferMap<bigint>;
}
export declare class TransactionValueEncoding implements IDatabaseEncoding<TransactionValue> {
    serialize(value: TransactionValue): Buffer;
    deserialize(buffer: Buffer): TransactionValue;
    getSize(value: TransactionValue): number;
}
//# sourceMappingURL=transactionValue.d.ts.map