"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.BalanceValueEncoding = void 0;
/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/. */
const bufio_1 = __importDefault(require("bufio"));
class BalanceValueEncoding {
    serialize(value) {
        const bw = bufio_1.default.write(this.getSize(value));
        bw.writeBigU64(value.unconfirmed);
        let flags = 0;
        flags |= Number(!!value.blockHash) << 0;
        flags |= Number(!!value.sequence) << 1;
        bw.writeU8(flags);
        if (value.blockHash) {
            bw.writeHash(value.blockHash);
        }
        if (value.sequence) {
            bw.writeU32(value.sequence);
        }
        return bw.render();
    }
    deserialize(buffer) {
        const reader = bufio_1.default.read(buffer, true);
        const value = reader.readBigU64();
        const flags = reader.readU8();
        const hasBlockHash = flags & (1 << 0);
        const hasSequence = flags & (1 << 1);
        let blockHash = null;
        if (hasBlockHash) {
            blockHash = reader.readHash();
        }
        let sequence = null;
        if (hasSequence) {
            sequence = reader.readU32();
        }
        return {
            unconfirmed: value,
            blockHash,
            sequence,
        };
    }
    getSize(value) {
        let size = 0;
        size += 8; // value
        size += 1; // flags
        if (value.blockHash) {
            size += 32;
        }
        if (value.sequence) {
            size += 4;
        }
        return size;
    }
}
exports.BalanceValueEncoding = BalanceValueEncoding;
//# sourceMappingURL=balanceValue.js.map