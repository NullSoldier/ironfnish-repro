"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Bech32JsonEncoder = void 0;
/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/. */
const utils_1 = require("../../../utils");
const encoder_1 = require("./encoder");
const json_1 = require("./json");
class Bech32JsonEncoder {
    /**
     * @deprecated Bech32 JSON encoding is deprecated. Use the newest version of the Bech32JSONEncoder.
     */
    encode(value) {
        return utils_1.Bech32m.encode(new json_1.JsonEncoder().encode(value), 'ironfishaccount00000');
    }
    decode(value, options) {
        const [decoded, err] = utils_1.Bech32m.decode(value);
        if (!decoded) {
            throw new encoder_1.DecodeFailed(`Invalid bech32 JSON encoding: ${err?.message || ''}`, this.constructor.name);
        }
        const accountImport = new json_1.JsonEncoder().decode(decoded);
        return {
            ...accountImport,
            name: options?.name ? options.name : accountImport.name,
        };
    }
}
exports.Bech32JsonEncoder = Bech32JsonEncoder;
//# sourceMappingURL=bech32json.js.map