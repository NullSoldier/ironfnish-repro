import { LanguageKey } from '../../../utils';
import { AccountImport } from '../../walletdb/accountValue';
export declare class DecodeInvalid extends Error {
}
export declare class DecodeFailed extends Error {
    decoder: string;
    constructor(message?: string, decoder?: string);
}
export declare enum AccountFormat {
    JSON = "JSON",
    Bech32 = "Bech32",
    SpendingKey = "SpendingKey",
    Mnemonic = "Mnemonic"
}
export declare type AccountEncodingOptions = {
    language?: LanguageKey;
};
export declare type AccountDecodingOptions = {
    name?: string;
};
export declare type AccountEncoder = {
    encode(value: AccountImport, options?: AccountEncodingOptions): string;
    decode(value: string, options?: AccountDecodingOptions): AccountImport;
};
//# sourceMappingURL=encoder.d.ts.map