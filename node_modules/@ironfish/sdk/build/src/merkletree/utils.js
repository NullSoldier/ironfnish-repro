"use strict";
/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/. */
Object.defineProperty(exports, "__esModule", { value: true });
exports.depthAtLeafCount = exports.isEmpty = exports.isRight = void 0;
/**
 * Is the given leaf a right child or left child of its parent node.
 *
 * Leaves are added in order, so this is the same as asking if the index
 * is an od number
 */
function isRight(index) {
    return index % 2 === 1;
}
exports.isRight = isRight;
/**
 * Is the given node index the empty node above the root node?
 */
function isEmpty(index) {
    return index === 0 || index === undefined;
}
exports.isEmpty = isEmpty;
/**
 * The depth of the tree when it contains a certain number of leaf nodes
 */
function depthAtLeafCount(size) {
    if (size === 0) {
        return 0;
    }
    if (size === 1) {
        return 1;
    }
    return Math.floor(Math.log2(size - 1)) + 2;
}
exports.depthAtLeafCount = depthAtLeafCount;
//# sourceMappingURL=utils.js.map