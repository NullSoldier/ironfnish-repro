/// <reference types="node" />
import type { LevelupDatabase } from './database';
import { AbstractBatch } from 'abstract-leveldown';
import { DatabaseSchema, IDatabaseBatch, IDatabaseStore, SchemaKey, SchemaValue } from '../database';
export declare class LevelupBatch implements IDatabaseBatch {
    db: LevelupDatabase;
    queue: AbstractBatch[];
    get size(): number;
    constructor(db: LevelupDatabase);
    putEncoded(key: Buffer, value: Buffer): LevelupBatch;
    delEncoded(key: Buffer): LevelupBatch;
    put<Schema extends DatabaseSchema>(store: IDatabaseStore<Schema>, key: SchemaKey<Schema>, value: SchemaValue<Schema>): LevelupBatch;
    del<Schema extends DatabaseSchema>(store: IDatabaseStore<Schema>, key: SchemaKey<Schema>): LevelupBatch;
    commit(): Promise<void>;
}
//# sourceMappingURL=batch.d.ts.map