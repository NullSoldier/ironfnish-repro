/// <reference types="node" />
import { IDatabaseEncoding } from '../../../../storage';
import { HeadValue } from './headValue';
export declare const VIEW_KEY_LENGTH = 64;
export interface AccountValue {
    version: number;
    id: string;
    name: string;
    spendingKey: string | null;
    viewKey: string;
    incomingViewKey: string;
    outgoingViewKey: string;
    publicAddress: string;
    createdAt: HeadValue | null;
}
export declare type AccountImport = Omit<AccountValue, 'id' | 'createdAt'> & {
    createdAt: {
        hash: string;
        sequence: number;
    } | null;
};
export declare class AccountValueEncoding implements IDatabaseEncoding<AccountValue> {
    serialize(value: AccountValue): Buffer;
    deserialize(buffer: Buffer): AccountValue;
    getSize(value: AccountValue): number;
}
//# sourceMappingURL=accountValue.d.ts.map