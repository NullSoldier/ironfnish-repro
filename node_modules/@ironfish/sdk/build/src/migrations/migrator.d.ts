import { Logger } from '../logger';
import { IronfishNode } from '../utils';
import { Database, Migration } from './migration';
export declare class Migrator {
    readonly node: IronfishNode;
    readonly logger: Logger;
    readonly migrations: Migration[];
    constructor(options: {
        node: IronfishNode;
        logger: Logger;
        databases?: Database[];
    });
    /**
     * Returns true if any database is at version 0
     */
    isInitial(): Promise<boolean>;
    /**
     * Returns true if the migration database is at version 0
     */
    isEmpty(migration: Migration): Promise<boolean>;
    isApplied(migration: Migration): Promise<boolean>;
    revert(options?: {
        dryRun?: boolean;
    }): Promise<void>;
    migrate(options?: {
        quiet?: boolean;
        quietNoop?: boolean;
        dryRun?: boolean;
    }): Promise<void>;
    check(): Promise<void>;
}
//# sourceMappingURL=migrator.d.ts.map