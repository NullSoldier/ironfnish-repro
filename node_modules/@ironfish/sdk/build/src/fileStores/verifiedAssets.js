"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.VerifiedAssetsCacheStore = exports.VERIFIED_ASSETS_CACHE_FILE_NAME = exports.VerifiedAssetsCacheOptionsDefaults = void 0;
/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/. */
const path_1 = __importDefault(require("path"));
const logger_1 = require("../logger");
const json_1 = require("../utils/json");
const keyStore_1 = require("./keyStore");
exports.VerifiedAssetsCacheOptionsDefaults = {
    apiUrl: '',
    assetIds: [],
};
exports.VERIFIED_ASSETS_CACHE_FILE_NAME = path_1.default.join('temp', 'verified-assets.json');
class VerifiedAssetsCacheStore extends keyStore_1.KeyStore {
    constructor(files, dataDir) {
        super(files, exports.VERIFIED_ASSETS_CACHE_FILE_NAME, exports.VerifiedAssetsCacheOptionsDefaults, dataDir);
        this.logger = logger_1.createRootLogger();
    }
    async load() {
        try {
            await super.load();
        }
        catch (e) {
            if (e instanceof json_1.ParseJsonError) {
                this.logger.debug(`Error: Could not parse JSON at ${this.storage.configPath}, ignoring.`);
            }
            else {
                throw e;
            }
        }
    }
}
exports.VerifiedAssetsCacheStore = VerifiedAssetsCacheStore;
//# sourceMappingURL=verifiedAssets.js.map