"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.FileStore = void 0;
/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/. */
const path_1 = __importDefault(require("path"));
const utils_1 = require("../utils");
class FileStore {
    constructor(files, configName, dataDir) {
        this.files = files;
        this.dataDir = files.resolve(dataDir);
        this.configName = configName;
        this.configPath = path_1.default.join(this.dataDir, configName);
    }
    async load() {
        const configExists = await this.files.exists(this.configPath);
        let config = null;
        if (configExists) {
            const data = await this.files.readFile(this.configPath);
            config = utils_1.JSONUtils.parse(data, this.configName);
        }
        return config;
    }
    async save(data) {
        const json = JSON.stringify(data, undefined, '    ');
        await this.files.mkdir(path_1.default.dirname(this.configPath), { recursive: true });
        await this.files.writeFile(this.configPath, json);
    }
}
exports.FileStore = FileStore;
//# sourceMappingURL=fileStore.js.map