"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MiningStatusSchema = exports.MiningGetStatusSchema = exports.MiningSubmitSchema = exports.MiningSubscribeSchema = exports.MiningWaitForWorkSchema = exports.MiningNotifySchema = exports.MiningSetTargetSchema = exports.MiningSubscribedMessageSchema = exports.MiningDisconnectMessageSchema = exports.StratumMessageSchema = void 0;
/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/. */
const yup = __importStar(require("yup"));
exports.StratumMessageSchema = yup
    .object({
    id: yup.number().required(),
    method: yup.string().required(),
    body: yup.mixed().notRequired(),
})
    .required();
exports.MiningDisconnectMessageSchema = yup
    .object({
    reason: yup.string().optional(),
    versionExpected: yup.number().optional(),
    bannedUntil: yup.number().optional(),
    message: yup.string().optional(),
})
    .optional();
exports.MiningSubscribedMessageSchema = yup
    .object({
    clientId: yup.number().required(),
    graffiti: yup.string().required(),
})
    .required();
exports.MiningSetTargetSchema = yup
    .object({
    target: yup.string().required(),
})
    .required();
exports.MiningNotifySchema = yup
    .object({
    miningRequestId: yup.number().required(),
    header: yup.string().required(),
})
    .required();
exports.MiningWaitForWorkSchema = yup
    .mixed()
    .oneOf([undefined]);
exports.MiningSubscribeSchema = yup
    .object({
    version: yup.number().required(),
    name: yup.string().optional(),
    publicAddress: yup.string().required(),
})
    .required();
exports.MiningSubmitSchema = yup
    .object({
    miningRequestId: yup.number().required(),
    randomness: yup.string().required(),
})
    .required();
exports.MiningGetStatusSchema = yup
    .object({
    publicAddress: yup.string().optional(),
})
    .default(undefined);
exports.MiningStatusSchema = yup
    .object({
    name: yup.string().required(),
    hashRate: yup.number().required(),
    miners: yup.number().required(),
    sharesPending: yup.number().required(),
    clients: yup.number().required(),
    bans: yup.number().required(),
    addressStatus: yup
        .object({
        publicAddress: yup.string().required(),
        connectedMiners: yup.array(yup.string().required()).defined(),
        hashRate: yup.number().required(),
        miners: yup.number().required(),
        sharesPending: yup.number().required(),
    })
        .default(undefined),
})
    .required();
//# sourceMappingURL=messages.js.map