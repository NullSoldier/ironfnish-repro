"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.StratumTcpClient = void 0;
/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/. */
const net_1 = __importDefault(require("net"));
const client_1 = require("./client");
class StratumTcpClient extends client_1.StratumClient {
    constructor(options) {
        super({ logger: options.logger });
        this.client = null;
        this.onSocketDisconnect = () => {
            this.client?.off('error', this.onError);
            this.client?.off('close', this.onDisconnect);
            this.client?.off('data', this.onSocketData);
            this.onDisconnect();
        };
        this.onSocketData = (data) => {
            this.onData(data).catch((e) => this.onError(e));
        };
        this.host = options.host;
        this.port = options.port;
    }
    connect() {
        return new Promise((resolve, reject) => {
            const onConnect = () => {
                client.off('connect', onConnect);
                client.off('error', onError);
                client.on('error', this.onError);
                client.on('close', this.onSocketDisconnect);
                resolve();
            };
            const onError = (error) => {
                client.off('connect', onConnect);
                client.off('error', onError);
                reject(error);
            };
            const client = new net_1.default.Socket();
            client.on('error', onError);
            client.on('connect', onConnect);
            client.on('data', this.onSocketData);
            client.connect({ host: this.host, port: this.port });
            this.client = client;
        });
    }
    writeData(data) {
        this.client?.write(data);
    }
    close() {
        this.client?.destroy();
        return Promise.resolve();
    }
}
exports.StratumTcpClient = StratumTcpClient;
//# sourceMappingURL=tcpClient.js.map