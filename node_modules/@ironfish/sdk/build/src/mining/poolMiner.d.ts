/// <reference types="node" />
import { ThreadPoolHandler } from '@ironfish/rust-nodejs';
import { Logger } from '../logger';
import { Meter } from '../metrics/meter';
import { StratumClient } from './stratum/clients/client';
export declare class MiningPoolMiner {
    readonly hashRate: Meter;
    readonly threadPool: ThreadPoolHandler;
    readonly stratum: StratumClient;
    readonly logger: Logger;
    private started;
    private stopPromise;
    private stopResolve;
    private readonly publicAddress;
    private readonly name;
    graffiti: Buffer | null;
    miningRequestId: number;
    target: Buffer;
    waiting: boolean;
    constructor(options: {
        threadCount: number;
        batchSize: number;
        logger: Logger;
        publicAddress: string;
        stratum: StratumClient;
        name?: string;
    });
    start(): void;
    stop(): void;
    waitForStop(): Promise<void>;
    setTarget(target: string): void;
    setGraffiti(graffiti: Buffer): void;
    newWork(miningRequestId: number, header: Buffer): void;
    waitForWork(): void;
    mine(): Promise<void>;
}
//# sourceMappingURL=poolMiner.d.ts.map