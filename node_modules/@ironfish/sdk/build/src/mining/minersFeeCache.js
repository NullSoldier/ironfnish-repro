"use strict";
/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/. */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MinersFeeCache = void 0;
const blru_1 = __importDefault(require("blru"));
class MinersFeeCache {
    constructor(options) {
        this.cache = new blru_1.default(5);
        this.node = options.node;
    }
    /**
     * Constructs a miners fee for an empty block at the given sequence
     *
     * @param sequence Block sequence to create the miners fee for
     * @param spendingKey Spend key of account to send the mining reward to
     * @returns
     */
    createEmptyMinersFee(sequence, account) {
        const key = `${sequence}-${account.publicAddress}`;
        const cached = this.cache.get(key);
        if (cached) {
            return cached;
        }
        const minersFeePromise = this.node.strategy.createMinersFee(BigInt(0), sequence, account.spendingKey);
        this.cache.set(key, minersFeePromise);
        return minersFeePromise;
    }
    startCreatingEmptyMinersFee(sequence, account) {
        const key = `${sequence}-${account.publicAddress}`;
        const minersFeePromise = this.node.strategy.createMinersFee(BigInt(0), sequence, account.spendingKey);
        this.cache.set(key, minersFeePromise);
    }
}
exports.MinersFeeCache = MinersFeeCache;
//# sourceMappingURL=minersFeeCache.js.map