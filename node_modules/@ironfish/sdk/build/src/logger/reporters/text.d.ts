import { ConsolaReporter, ConsolaReporterLogObject, LogLevel } from 'consola';
export declare class TextReporter implements ConsolaReporter {
    /**
     * Maps tags to log level overrides.
     */
    readonly tagToLogLevelMap: Map<string, LogLevel>;
    /**
     * The default minimum log level to display (inclusive),
     * if no specific overrides apply.
     */
    defaultMinimumLogLevel: LogLevel;
    /**
     * Prefix template string to prepend to all logs.
     */
    logPrefix: string;
    /**
     * enable colorizing log elements
     */
    colorEnabled: boolean;
    /**
     * Updates the reporter's log levels for a given tag.
     *
     * `*` as a tag sets `defaultMinimumLogLevel`.
     * @param tag A tag set on a logger.
     * @param level Filter out logs less than or equal to this value.
     */
    setLogLevel(tag: string, level: LogLevel): void;
    /**
     * Determines whether to output logs based on the configured minimum log levels.
     * @param logObj a logObj instance from the consola reporter's log function
     */
    private shouldLog;
    /**
     * Materializes the variables on the logPrefix template string into a new string
     * @param logObj a logObj instance from the consola reporter's log function
     */
    private buildLogPrefix;
    logText(_logObj: ConsolaReporterLogObject, _args: unknown[]): void;
    log(logObj: ConsolaReporterLogObject): void;
}
//# sourceMappingURL=text.d.ts.map