import { PromiseReject, PromiseResolve } from '../utils';
export declare class Stream<T> implements AsyncIterable<T> {
    buffer: T[];
    waiting: [PromiseResolve<IteratorResult<T>>, PromiseReject][];
    closed: boolean;
    error: unknown;
    write(value: T): void;
    close(e?: unknown): void;
    next(): Promise<IteratorResult<T>>;
    [Symbol.asyncIterator](): AsyncIterator<T, void>;
}
//# sourceMappingURL=stream.d.ts.map