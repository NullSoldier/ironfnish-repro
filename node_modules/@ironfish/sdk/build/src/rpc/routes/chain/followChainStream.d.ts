import * as yup from 'yup';
import { RpcTransaction } from './types';
export declare type FollowChainStreamRequest = {
    head?: string | null;
    serialized?: boolean;
    wait?: boolean;
    limit?: number;
} | undefined;
export declare type FollowChainStreamResponse = {
    type: 'connected' | 'disconnected' | 'fork';
    head: {
        sequence: number;
    };
    block: {
        hash: string;
        sequence: number;
        previous: string;
        graffiti: string;
        difficulty: string;
        size: number;
        timestamp: number;
        work: string;
        main: boolean;
        noteSize: number | null;
        transactions: RpcTransaction[];
    };
};
export declare const FollowChainStreamRequestSchema: yup.ObjectSchema<FollowChainStreamRequest>;
export declare const FollowChainStreamResponseSchema: yup.ObjectSchema<FollowChainStreamResponse>;
//# sourceMappingURL=followChainStream.d.ts.map