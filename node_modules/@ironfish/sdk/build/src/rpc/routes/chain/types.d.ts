import * as yup from 'yup';
export declare type RpcNote = {
    hash: string;
    serialized: string;
};
export declare const RpcNoteSchema: yup.ObjectSchema<RpcNote>;
export declare type RpcMint = {
    id: string;
    metadata: string;
    name: string;
    creator: string;
    value: string;
    transferOwnershipTo?: string;
};
export declare const RpcMintSchema: yup.ObjectSchema<RpcMint>;
export declare type RpcBurn = {
    id: string;
    value: string;
};
export declare const RpcBurnSchema: yup.ObjectSchema<RpcBurn>;
export declare type RpcSpend = {
    nullifier: string;
    commitment: string;
    size: number;
};
export declare const RpcSpendSchema: yup.ObjectSchema<RpcSpend>;
export declare type RpcTransaction = {
    serialized?: string;
    hash: string;
    size: number;
    fee: number;
    expiration: number;
    notes: {
        commitment: string;
    }[];
    spends: RpcSpend[];
    mints: RpcMint[];
    burns: RpcBurn[];
};
export declare const RpcTransactionSchema: yup.ObjectSchema<RpcTransaction>;
//# sourceMappingURL=types.d.ts.map