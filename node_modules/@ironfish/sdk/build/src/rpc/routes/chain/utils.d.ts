/// <reference types="node" />
import { BufferSet } from 'buffer-map';
import { Blockchain } from '../../../blockchain';
import { Logger } from '../../../logger';
import { BlockHeader } from '../../../primitives/blockheader';
export declare function logChain(chain: Blockchain, start?: number | null, end?: number | null, options?: {
    prev?: boolean;
    merge?: boolean;
    seq?: boolean;
    work?: boolean;
    indent?: string;
}, logger?: Logger): Promise<void>;
export declare function renderChain(chain: Blockchain, start?: number | null, stop?: number | null, options?: {
    prev?: boolean;
    seq?: boolean;
    work?: boolean;
    indent?: string;
}, logger?: Logger): Promise<string[]>;
export declare function renderGraph(chain: Blockchain, header: BlockHeader, end: number, content: string[], options?: {
    prev?: boolean;
    seq?: boolean;
    work?: boolean;
    indent?: string;
}, logger?: Logger, last?: boolean, _only?: boolean, indent?: string, seen?: BufferSet<Buffer>): Promise<void>;
//# sourceMappingURL=utils.d.ts.map