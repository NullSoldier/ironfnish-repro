import { Account, Wallet } from '../../../wallet';
import { AccountImport } from '../../../wallet/walletdb/accountValue';
import { AssetValue } from '../../../wallet/walletdb/assetValue';
import { DecryptedNoteValue } from '../../../wallet/walletdb/decryptedNoteValue';
import { TransactionValue } from '../../../wallet/walletdb/transactionValue';
import { WorkerPool } from '../../../workerPool';
import { RcpAccountAssetBalanceDelta, RpcAccountImport, RpcAccountTransaction, RpcWalletNote } from './types';
export declare function getAccount(wallet: Wallet, name?: string): Account;
export declare function serializeRpcAccountTransaction(transaction: TransactionValue): RpcAccountTransaction;
export declare function deserializeRpcAccountImport(accountImport: RpcAccountImport): AccountImport;
export declare function getAssetBalanceDeltas(account: Account, transaction: TransactionValue): Promise<RcpAccountAssetBalanceDelta[]>;
export declare function getTransactionNotes(workerPool: WorkerPool, account: Account, transaction: TransactionValue): Promise<Array<DecryptedNoteValue>>;
export declare function getAccountDecryptedNotes(workerPool: WorkerPool, account: Account, transaction: TransactionValue): Promise<RpcWalletNote[]>;
export declare function serializeRpcWalletNote(note: DecryptedNoteValue, publicAddress: string, asset?: AssetValue): RpcWalletNote;
//# sourceMappingURL=utils.d.ts.map