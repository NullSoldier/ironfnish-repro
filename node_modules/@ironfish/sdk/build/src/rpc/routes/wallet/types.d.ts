import * as yup from 'yup';
import { AccountImport } from '../../../wallet/walletdb/accountValue';
export declare type RpcAccountTransaction = {
    hash: string;
    fee: string;
    blockHash?: string;
    blockSequence?: number;
    notesCount: number;
    spendsCount: number;
    mintsCount: number;
    burnsCount: number;
    expiration: number;
    timestamp: number;
    submittedSequence: number;
};
export declare type RcpAccountAssetBalanceDelta = {
    assetId: string;
    assetName: string;
    delta: string;
};
export declare type RpcWalletNote = {
    value: string;
    assetId: string;
    assetName: string;
    memo: string;
    sender: string;
    owner: string;
    noteHash: string;
    transactionHash: string;
    index: number | null;
    nullifier: string | null;
    spent: boolean;
    /**
     * @deprecated Please use `owner` address instead
     */
    isOwner: boolean;
    /**
     * @deprecated Please use `noteHash` instead
     */
    hash: string;
};
export declare const RpcWalletNoteSchema: yup.ObjectSchema<RpcWalletNote>;
export declare type RpcAccountImport = Omit<AccountImport, 'createdAt'> & {
    createdAt: {
        hash: string;
        sequence: number;
    } | null;
};
export declare const RpcAccountImportSchema: yup.ObjectSchema<RpcAccountImport>;
//# sourceMappingURL=types.d.ts.map