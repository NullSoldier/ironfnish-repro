"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GetAccountsResponseSchema = exports.GetAccountsRequestSchema = void 0;
/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/. */
const yup = __importStar(require("yup"));
const router_1 = require("../router");
exports.GetAccountsRequestSchema = yup
    .object({
    default: yup.boolean().optional(),
})
    .notRequired()
    .default({});
exports.GetAccountsResponseSchema = yup
    .object({
    accounts: yup.array(yup.string().defined()).defined(),
})
    .defined();
router_1.routes.register(`${router_1.ApiNamespace.wallet}/getAccounts`, exports.GetAccountsRequestSchema, (request, node) => {
    let accounts = [];
    if (request.data?.default) {
        const defaultAccount = node.wallet.getDefaultAccount();
        if (defaultAccount) {
            accounts = [defaultAccount];
        }
    }
    else {
        accounts = node.wallet.listAccounts();
    }
    const names = accounts.map((a) => (request.data?.displayName ? a.displayName : a.name));
    request.end({ accounts: names });
});
//# sourceMappingURL=getAccounts.js.map