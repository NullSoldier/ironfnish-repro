import * as yup from 'yup';
export declare const MESSAGE_DELIMITER = "\f";
export declare type ClientSocketRpc = {
    type: 'message';
    data: SocketRpcRequest;
};
export declare type ServerSocketRpc = {
    type: 'message' | 'malformedRequest' | 'error' | 'stream';
    data: SocketRpcResponse | SocketRpcError | SocketRpcStream;
};
export declare type SocketRpcRequest = {
    mid: number;
    type: string;
    auth: string | null | undefined;
    data: unknown | undefined;
};
export declare type SocketRpcResponse = {
    id: number;
    status: number;
    data: unknown | undefined;
};
export declare type SocketRpcStream = {
    id: number;
    data: unknown | undefined;
};
export declare type SocketRpcError = {
    code: string;
    message: string;
    stack?: string;
};
export declare const ClientSocketRpcSchema: yup.ObjectSchema<ClientSocketRpc>;
export declare const ServerSocketRpcSchema: yup.ObjectSchema<ServerSocketRpc>;
export declare const SocketRpcErrorSchema: yup.ObjectSchema<SocketRpcError>;
export declare const SocketRpcRequestSchema: yup.ObjectSchema<SocketRpcRequest>;
export declare const SocketRpcResponseSchema: yup.ObjectSchema<SocketRpcResponse>;
export declare const SocketRpcStreamSchema: yup.ObjectSchema<SocketRpcStream>;
//# sourceMappingURL=protocol.d.ts.map