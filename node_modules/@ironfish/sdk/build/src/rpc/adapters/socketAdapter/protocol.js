"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SocketRpcStreamSchema = exports.SocketRpcResponseSchema = exports.SocketRpcRequestSchema = exports.SocketRpcErrorSchema = exports.ServerSocketRpcSchema = exports.ClientSocketRpcSchema = exports.MESSAGE_DELIMITER = void 0;
/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/. */
const yup = __importStar(require("yup"));
exports.MESSAGE_DELIMITER = '\f';
exports.ClientSocketRpcSchema = yup
    .object({
    type: yup.string().oneOf(['message']).required(),
    data: yup
        .object({
        mid: yup.number().required(),
        type: yup.string().required(),
        auth: yup.string().nullable().notRequired(),
        data: yup.mixed().notRequired(),
    })
        .required(),
})
    .required();
exports.ServerSocketRpcSchema = yup
    .object({
    type: yup.string().oneOf(['message', 'malformedRequest', 'error', 'stream']).required(),
    data: yup.mixed().required(),
})
    .required();
exports.SocketRpcErrorSchema = yup
    .object({
    code: yup.string().defined(),
    message: yup.string().defined(),
    stack: yup.string().notRequired(),
})
    .defined();
exports.SocketRpcRequestSchema = yup
    .object({
    mid: yup.number().required(),
    type: yup.string().required(),
    auth: yup.string().nullable().notRequired(),
    data: yup.mixed().notRequired(),
})
    .required();
exports.SocketRpcResponseSchema = yup
    .object({
    id: yup.number().defined(),
    status: yup.number().defined(),
    data: yup.mixed().notRequired(),
})
    .defined();
exports.SocketRpcStreamSchema = yup
    .object({
    id: yup.number().defined(),
    data: yup.mixed().notRequired(),
})
    .defined();
//# sourceMappingURL=protocol.js.map