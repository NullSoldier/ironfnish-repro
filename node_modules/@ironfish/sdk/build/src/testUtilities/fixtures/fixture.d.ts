export declare type FixtureGenerate<T> = () => Promise<T> | T;
export declare type FixtureRestore<T> = (fixture: T) => Promise<void> | void;
export declare type FitxureDeserialize<T, TSerialized> = (data: TSerialized) => Promise<T> | T;
export declare type FixtureSerialize<T, TSerialized> = (fixture: T) => Promise<TSerialized> | TSerialized;
export declare function shouldUpdateFixtures(): boolean;
export declare function disableFixtures(): void;
export declare function useFixture<TFixture, TSerialized = unknown>(generate: FixtureGenerate<TFixture>, options?: {
    restore?: FixtureRestore<TFixture>;
    process?: FixtureRestore<TFixture>;
    deserialize?: FitxureDeserialize<TFixture, TSerialized>;
    serialize?: FixtureSerialize<TFixture, TSerialized>;
}): Promise<TFixture>;
//# sourceMappingURL=fixture.d.ts.map