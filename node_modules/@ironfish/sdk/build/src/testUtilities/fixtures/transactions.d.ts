/// <reference types="node" />
import { FullNode } from '../../node';
import { BurnDescription } from '../../primitives/burnDescription';
import { MintData } from '../../primitives/rawTransaction';
import { Transaction } from '../../primitives/transaction';
import { Account, Wallet } from '../../wallet';
import { FixtureGenerate } from './fixture';
export declare function restoreTransactionFixtureToAccounts(transaction: Transaction, wallet: Wallet): Promise<void>;
export declare function usePostTxFixture(options: {
    node: FullNode;
    wallet: Wallet;
    from: Account;
    to?: Account;
    fee?: bigint;
    amount?: bigint;
    expiration?: number;
    assetId?: Buffer;
    outputs?: {
        publicAddress: string;
        amount: bigint;
        memo: string;
        assetId: Buffer;
    }[];
    mints?: MintData[];
    burns?: BurnDescription[];
    restore?: boolean;
}): Promise<Transaction>;
export declare function useTxFixture(wallet: Wallet, from: Account, to: Account, generate?: FixtureGenerate<Transaction>, fee?: bigint, expiration?: number, restore?: boolean): Promise<Transaction>;
export declare function useMinersTxFixture(node: FullNode, to?: Account, sequence?: number, amount?: number): Promise<Transaction>;
//# sourceMappingURL=transactions.d.ts.map