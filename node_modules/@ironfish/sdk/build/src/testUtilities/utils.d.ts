/// <reference types="jest" />
import { Transaction } from '../primitives';
import { Account, Wallet } from '../wallet';
export declare const TEST_DATA_DIR: string;
/**
 * This is only usable in the jasmine runner
 */
export declare function getCurrentTestPath(): string;
export declare function getUniqueTestDataDir(): string;
export declare function writeTestReport(csvReport: Map<string, string>, consoleReport: Map<string, string>, testName: string): void;
export declare function splitNotes(account: Account, numOutputs: number, wallet: Wallet): Promise<Transaction>;
/**
 * Asserts the type of a given function as a Jest mock.
 */
export declare function typeMock<T extends readonly unknown[], R>(func: (...args: [...T]) => R): jest.Mock<R, [...T]>;
/**
 * Used to shuffle the responses from an asynchronous API call using a debounce strategy.
 * @param mock The mock to intercept calls for and shuffle
 * @param mocked The mock function to replace mock with
 * @param time The maximum amount of debounce time to allow before returning shuffled results
 */
export declare function mockImplementationShuffle<TArgs extends unknown[], TResult>(mock: jest.Mock<Promise<TResult>, TArgs>, mocked: (...args: TArgs) => Promise<TResult>, time?: number): () => void;
//# sourceMappingURL=utils.d.ts.map