"use strict";
/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/. */
Object.defineProperty(exports, "__esModule", { value: true });
exports.createRawTransaction = exports.isTransactionMine = void 0;
const rust_nodejs_1 = require("@ironfish/rust-nodejs");
function isTransactionMine(transaction, account) {
    for (const note of transaction.notes) {
        const receivedNote = note.decryptNoteForOwner(account.incomingViewKey);
        if (receivedNote) {
            return true;
        }
        const spentNote = note.decryptNoteForSpender(account.outgoingViewKey);
        if (spentNote) {
            return true;
        }
    }
    return false;
}
exports.isTransactionMine = isTransactionMine;
async function createRawTransaction(options) {
    const outputs = options.outputs ?? [];
    if (options.to) {
        outputs.push({
            publicAddress: options.to.publicAddress,
            amount: options.amount ?? 1n,
            memo: '',
            assetId: options.assetId ?? rust_nodejs_1.Asset.nativeId(),
        });
    }
    return await options.wallet.createTransaction({
        account: options.from,
        outputs,
        mints: options.mints,
        burns: options.burns,
        fee: options.fee ?? 0n,
        expiration: options.expiration ?? 0,
        expirationDelta: 0,
    });
}
exports.createRawTransaction = createRawTransaction;
//# sourceMappingURL=transaction.js.map