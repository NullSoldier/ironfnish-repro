/// <reference types="node" />
import { Note as NativeNote } from '@ironfish/rust-nodejs';
import { NoteEncryptedHash } from './noteEncrypted';
export declare class Note {
    private readonly noteSerialized;
    private note;
    private referenceCount;
    private readonly _value;
    private readonly _memo;
    private readonly _assetId;
    private readonly _sender;
    private readonly _owner;
    constructor(noteSerialized: Buffer);
    static size: number;
    serialize(): Buffer;
    takeReference(): NativeNote;
    returnReference(): void;
    hash(): NoteEncryptedHash;
    value(): bigint;
    owner(): string;
    sender(): string;
    memo(): string;
    assetId(): Buffer;
    nullifier(ownerViewKey: string, position: bigint): Buffer;
    equals(other: Note): boolean;
}
//# sourceMappingURL=note.d.ts.map