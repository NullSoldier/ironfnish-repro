/// <reference types="node" />
import type fs from 'fs';
export declare abstract class FileSystem {
    abstract init(): Promise<FileSystem>;
    abstract access(path: fs.PathLike, mode?: number | undefined): Promise<void>;
    abstract writeFile(path: string, data: string, options?: {
        mode?: fs.Mode;
        flag?: fs.OpenMode;
    }): Promise<void>;
    abstract readFile(path: string): Promise<string>;
    abstract mkdir(path: string, options: {
        recursive?: boolean;
    }): Promise<void>;
    abstract resolve(path: string): string;
    abstract join(...paths: string[]): string;
    abstract dirname(path: string): string;
    abstract basename(path: string, ext?: string | undefined): string;
    abstract extname(path: string): string;
    abstract exists(path: string): Promise<boolean>;
}
//# sourceMappingURL=fileSystem.d.ts.map