"use strict";
/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/. */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.WorkerMessage = exports.WorkerMessageType = exports.WORKER_MESSAGE_HEADER_SIZE = void 0;
const bufio_1 = __importDefault(require("bufio"));
exports.WORKER_MESSAGE_HEADER_SIZE = 9;
var WorkerMessageType;
(function (WorkerMessageType) {
    WorkerMessageType[WorkerMessageType["CreateMinersFee"] = 0] = "CreateMinersFee";
    WorkerMessageType[WorkerMessageType["DecryptNotes"] = 2] = "DecryptNotes";
    WorkerMessageType[WorkerMessageType["JobAborted"] = 3] = "JobAborted";
    WorkerMessageType[WorkerMessageType["JobError"] = 4] = "JobError";
    WorkerMessageType[WorkerMessageType["Sleep"] = 5] = "Sleep";
    WorkerMessageType[WorkerMessageType["SubmitTelemetry"] = 6] = "SubmitTelemetry";
    WorkerMessageType[WorkerMessageType["VerifyTransactions"] = 7] = "VerifyTransactions";
    WorkerMessageType[WorkerMessageType["PostTransaction"] = 8] = "PostTransaction";
})(WorkerMessageType = exports.WorkerMessageType || (exports.WorkerMessageType = {}));
class WorkerMessage {
    constructor(type, jobId) {
        this.jobId = jobId ?? WorkerMessage.id++;
        this.type = type;
    }
    static deserializeHeader(buffer) {
        const br = bufio_1.default.read(buffer);
        const jobId = Number(br.readU64());
        const type = br.readU8();
        // TODO(mat): can we utilize zero copy here?
        return {
            jobId,
            type,
            body: br.readBytes(br.left()),
        };
    }
    serialize() {
        const bw = bufio_1.default.write(exports.WORKER_MESSAGE_HEADER_SIZE + this.getSize());
        bw.writeU64(this.jobId);
        bw.writeU8(this.type);
        this.serializePayload(bw);
        return bw.render();
    }
}
exports.WorkerMessage = WorkerMessage;
WorkerMessage.id = 0;
//# sourceMappingURL=workerMessage.js.map