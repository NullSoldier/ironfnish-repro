"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.handleRequest = exports.handlers = void 0;
const createMinersFee_1 = require("./createMinersFee");
const decryptNotes_1 = require("./decryptNotes");
const postTransaction_1 = require("./postTransaction");
const sleep_1 = require("./sleep");
const submitTelemetry_1 = require("./submitTelemetry");
const verifyTransactions_1 = require("./verifyTransactions");
const workerMessage_1 = require("./workerMessage");
exports.handlers = {
    [workerMessage_1.WorkerMessageType.CreateMinersFee]: createMinersFee_1.CreateMinersFeeTask.getInstance(),
    [workerMessage_1.WorkerMessageType.PostTransaction]: postTransaction_1.PostTransactionTask.getInstance(),
    [workerMessage_1.WorkerMessageType.DecryptNotes]: decryptNotes_1.DecryptNotesTask.getInstance(),
    [workerMessage_1.WorkerMessageType.JobAborted]: undefined,
    [workerMessage_1.WorkerMessageType.JobError]: undefined,
    [workerMessage_1.WorkerMessageType.Sleep]: sleep_1.SleepTask.getInstance(),
    [workerMessage_1.WorkerMessageType.SubmitTelemetry]: submitTelemetry_1.SubmitTelemetryTask.getInstance(),
    [workerMessage_1.WorkerMessageType.VerifyTransactions]: verifyTransactions_1.VerifyTransactionsTask.getInstance(),
};
async function handleRequest(request, job) {
    const handler = exports.handlers[request.type];
    if (!handler) {
        throw new Error(`No handler found for ${request.type}`);
    }
    return handler.execute(request, job);
}
exports.handleRequest = handleRequest;
//# sourceMappingURL=handlers.js.map