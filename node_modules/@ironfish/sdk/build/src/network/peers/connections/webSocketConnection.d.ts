/// <reference types="node" />
import type { Logger } from '../../../logger';
import { MetricsMonitor } from '../../../metrics';
import { IsomorphicWebSocket } from '../../types';
import { Connection, ConnectionDirection } from './connection';
/**
 * Light wrapper of node+browser WebSockets that knows how to send and receive
 * LooseMessages instead of strings/data.
 */
export declare class WebSocketConnection extends Connection {
    private readonly socket;
    readonly hostname?: string;
    port?: number;
    constructor(socket: IsomorphicWebSocket, direction: ConnectionDirection, logger: Logger, metrics?: MetricsMonitor, options?: {
        simulateLatency?: number;
        hostname?: string;
        port?: number;
    });
    _send: (data: Buffer) => boolean;
    /**
     * Close the connection
     */
    close: (error?: unknown) => void;
}
//# sourceMappingURL=webSocketConnection.d.ts.map