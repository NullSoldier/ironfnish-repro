export declare class ConnectionRetry {
    /**
     * Number of consecutive connection failures.
     */
    private failedRetries;
    /**
     * Timestamp representing the next time to allow a connection to be initiated.
     */
    private disconnectUntil;
    /**
     * If true, a failed connection will not cause ConnectionRetry to stop retrying.
     */
    private shouldNeverExpire;
    constructor(shouldNeverExpire?: boolean);
    /**
     * Call this if new connection attempts should never be made.
     */
    neverRetryConnecting(): void;
    /**
     * True if new connection attempts will never be made.
     */
    get willNeverRetryConnecting(): boolean;
    /**
     * True if a new connection can be initiated.
     */
    get canConnect(): boolean;
    /**
     * Call this when a successful connection is made to the peer.
     * If neverRetryConnecting is set, clears it.
     */
    successfulConnection(): void;
    /**
     * Call this when a connection to a peer fails.
     * @param now The current time
     */
    failedConnection(now?: number): void;
}
//# sourceMappingURL=connectionRetry.d.ts.map