"use strict";
/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/. */
Object.defineProperty(exports, "__esModule", { value: true });
exports.WebSocketServer = exports.WEBSOCKET_OPTIONS = void 0;
const version_1 = require("./version");
exports.WEBSOCKET_OPTIONS = {
    maxPayload: version_1.MAX_MESSAGE_SIZE,
};
class WebSocketServer {
    constructor(ctor, port) {
        const opts = {
            ...exports.WEBSOCKET_OPTIONS,
            port,
        };
        this.server = new ctor(opts);
    }
    /**
     * Fired when the server is ready to accept connections. Callback will only
     * be executed once.
     * @param cb Callback function to be executed.
     */
    onStart(cb) {
        this.server.once('listening', cb);
    }
    onConnection(cb) {
        this.server.on('connection', cb);
    }
    close() {
        this.server.close();
        for (const client of this.server.clients) {
            client.terminate();
        }
    }
}
exports.WebSocketServer = WebSocketServer;
//# sourceMappingURL=webSocketServer.js.map