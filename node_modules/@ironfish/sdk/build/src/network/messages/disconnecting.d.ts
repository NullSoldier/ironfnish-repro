/// <reference types="node" />
import bufio from 'bufio';
import { Identity } from '../identity';
import { NetworkMessage } from './networkMessage';
export declare enum DisconnectingReason {
    ShuttingDown = 0,
    Congested = 1,
    BadMessages = 2
}
interface CreateDisconnectingMessageOptions {
    destinationIdentity: Identity | null;
    disconnectUntil: number;
    reason: DisconnectingReason;
    sourceIdentity: Identity;
}
export declare class DisconnectingMessage extends NetworkMessage {
    readonly destinationIdentity: Identity | null;
    readonly disconnectUntil: number;
    readonly reason: DisconnectingReason;
    readonly sourceIdentity: Identity;
    constructor({ destinationIdentity, disconnectUntil, reason, sourceIdentity, }: CreateDisconnectingMessageOptions);
    serializePayload(bw: bufio.StaticWriter | bufio.BufferWriter): void;
    static deserializePayload(buffer: Buffer): DisconnectingMessage;
    getSize(): number;
}
export {};
//# sourceMappingURL=disconnecting.d.ts.map