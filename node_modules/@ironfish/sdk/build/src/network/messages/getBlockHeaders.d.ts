/// <reference types="node" />
import bufio from 'bufio';
import { BlockHeader } from '../../primitives';
import { RpcNetworkMessage } from './rpcNetworkMessage';
export declare class GetBlockHeadersRequest extends RpcNetworkMessage {
    readonly start: number | Buffer;
    readonly limit: number;
    readonly skip: number;
    readonly reverse: boolean;
    constructor(start: number | Buffer, limit: number, skip: number, reverse: boolean, rpcId?: number);
    serializePayload(bw: bufio.StaticWriter | bufio.BufferWriter): void;
    static deserializePayload(buffer: Buffer, rpcId: number): GetBlockHeadersRequest;
    getSize(): number;
}
export declare class GetBlockHeadersResponse extends RpcNetworkMessage {
    readonly headers: BlockHeader[];
    constructor(headers: BlockHeader[], rpcId: number);
    serializePayload(bw: bufio.StaticWriter | bufio.BufferWriter): void;
    static deserializePayload(buffer: Buffer, rpcId: number): GetBlockHeadersResponse;
    getSize(): number;
}
//# sourceMappingURL=getBlockHeaders.d.ts.map