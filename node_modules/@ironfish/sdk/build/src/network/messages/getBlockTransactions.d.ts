/// <reference types="node" />
import bufio from 'bufio';
import { Transaction } from '../../primitives/transaction';
import { RpcNetworkMessage } from './rpcNetworkMessage';
export declare class GetBlockTransactionsRequest extends RpcNetworkMessage {
    readonly blockHash: Buffer;
    readonly transactionIndexes: number[];
    constructor(blockHash: Buffer, transactionIndexes: number[], rpcId?: number);
    serializePayload(bw: bufio.StaticWriter | bufio.BufferWriter): void;
    static deserializePayload(buffer: Buffer, rpcId: number): GetBlockTransactionsRequest;
    getSize(): number;
}
export declare class GetBlockTransactionsResponse extends RpcNetworkMessage {
    readonly blockHash: Buffer;
    readonly transactions: Transaction[];
    constructor(blockHash: Buffer, transactions: Transaction[], rpcId: number);
    serializePayload(bw: bufio.StaticWriter | bufio.BufferWriter): void;
    static deserializePayload(buffer: Buffer, rpcId: number): GetBlockTransactionsResponse;
    getSize(): number;
}
//# sourceMappingURL=getBlockTransactions.d.ts.map