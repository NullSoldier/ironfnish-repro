import { BoxKeyPair } from '@ironfish/rust-nodejs';
/**
 * Types and helper functions related to a peer's identity.
 */
/**
 * The entire identity required to send messages on the peer network.
 * An object consisting of a public key and a private key.
 */
export declare type PrivateIdentity = BoxKeyPair;
/**
 * A base64-encoded 32-byte public key exposed to other peers on the network.
 */
export declare type Identity = string;
/**
 * Length of the identity in bytes.
 */
export declare const identityLength: number;
/**
 * Length of the secret key from PrivateIdentity in bytes.
 */
export declare const secretKeyLength: number;
/**
 * Length of the identity as a base64-encoded string.
 */
export declare const base64IdentityLength: number;
export declare function isIdentity(obj: string): boolean;
export declare function canInitiateWebRTC(source: Identity, dest: Identity): boolean;
export declare function canKeepDuplicateConnection(source: Identity, dest: Identity): boolean;
export declare function privateIdentityToIdentity(identity: PrivateIdentity): Identity;
//# sourceMappingURL=identity.d.ts.map