"use strict";
/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/. */
Object.defineProperty(exports, "__esModule", { value: true });
exports.mockIdentity = exports.webRtcCanInitiateIdentity = exports.webRtcCannotInitiateIdentity = void 0;
const identity_1 = require("../identity");
const mockPrivateIdentity_1 = require("./mockPrivateIdentity");
// The identities here are in order of:
// Lowest:   webRtcCanInitiateIdentity
// Middle:   webRtcLocalIdentity
// Greatest: webRtcCannotInitiateIdentity
/** webRtcCannotInitiateIdentity as a base64 string is greater than webRtcLocalIdentity */
const webRtcCannotInitiateIdentity = () => identity_1.privateIdentityToIdentity(mockPrivateIdentity_1.webRtcCannotInitiateIdentityPrivate());
exports.webRtcCannotInitiateIdentity = webRtcCannotInitiateIdentity;
/** webRtcCanInitiateIdentity as a base64 string is less than webRtcLocalIdentity */
const webRtcCanInitiateIdentity = () => identity_1.privateIdentityToIdentity(mockPrivateIdentity_1.webRtcCanInitiateIdentityPrivate());
exports.webRtcCanInitiateIdentity = webRtcCanInitiateIdentity;
/**
 * Utility to mock a public-facing identity.
 */
function mockIdentity(identity) {
    return identity_1.privateIdentityToIdentity(mockPrivateIdentity_1.mockPrivateIdentity(identity));
}
exports.mockIdentity = mockIdentity;
//# sourceMappingURL=mockIdentity.js.map