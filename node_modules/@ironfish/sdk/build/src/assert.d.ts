import { Constructor } from './utils/types';
export declare class Assert {
    static isUnreachable(x: never, message?: string): never;
    static isUndefined<T>(x: undefined | T, message?: string): asserts x is undefined;
    static isNotUndefined<T>(x: undefined | T, message?: string): asserts x is T;
    static isNotNull<T>(x: null | T, message?: string): asserts x is T;
    static isNull(x: unknown, message?: string): asserts x is null;
    static isEqual(a: unknown, b: unknown, message?: string): void;
    static isGreaterThan(a: number, b: number, message?: string): void;
    static isNever(x: never, message?: string): never;
    static isTrue(x: boolean, message?: string): asserts x is true;
    static isFalse(x: boolean, message?: string): asserts x is false;
    static isInstanceOf<T>(x: unknown, constructor: Constructor<T>, message?: string): asserts x is T;
    static isString(x: unknown, message?: string): asserts x is string;
    static isTruthy<T extends unknown>(x: T, message?: string): asserts x is Exclude<T, null | undefined | 0 | false | ''>;
}
//# sourceMappingURL=assert.d.ts.map